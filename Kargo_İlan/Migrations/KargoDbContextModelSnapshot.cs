// <auto-generated />
using System;
using Kargo_İlan.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kargo_İlan.Migrations
{
    [DbContext(typeof(KargoDbContext))]
    partial class KargoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kargo_İlan.Models.CargoType", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CargoId"));

                    b.Property<string>("CargoName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("KargoAdi")
                        .HasComment("Kargo tipinin adını belirtir");

                    b.HasKey("CargoId")
                        .HasName("PK_KargoTipleri");

                    b.ToTable("CargoTypes");
                });

            modelBuilder.Entity("Kargo_İlan.Models.CategoryType", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("KategoriAdi")
                        .HasComment("Kategori adını belirtir");

                    b.HasKey("CategoryId")
                        .HasName("PK_Kategoriler");

                    b.ToTable("CategoryTypes");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UlkeAdi");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Enlem");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Boylam");

                    b.HasKey("CountryID")
                        .HasName("PK_Ulkeler");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Kargo_İlan.Models.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IlceAdi");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Enlem");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Boylam");

                    b.HasKey("DistrictId")
                        .HasName("PK_Ilceler");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListingId"));

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("OlusturulmaTarihi")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Aciklama");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ResimYolu");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Baslik");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("GuncellemeTarihi");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VarisIlId")
                        .HasColumnType("int");

                    b.Property<int>("VarisIlceId")
                        .HasColumnType("int");

                    b.Property<int>("VarisUlkeId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Agirlik");

                    b.Property<int>("YuklemeIlId")
                        .HasColumnType("int");

                    b.Property<int>("YuklemeIlceId")
                        .HasColumnType("int");

                    b.Property<int>("YuklemeUlkeId")
                        .HasColumnType("int");

                    b.HasKey("ListingId");

                    b.HasIndex("CargoId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("VarisIlId");

                    b.HasIndex("VarisIlceId");

                    b.HasIndex("VarisUlkeId");

                    b.HasIndex("YuklemeIlceId");

                    b.HasIndex("YuklemeUlkeId");

                    b.HasIndex(new[] { "VehicleTypeId" }, "IX_Listing_AracTipi");

                    b.HasIndex(new[] { "UserId" }, "IX_Listing_Kullanici");

                    b.HasIndex(new[] { "CreatedAt" }, "IX_Listing_OlusturulmaTarihi");

                    b.HasIndex(new[] { "YuklemeIlId", "VarisIlId" }, "IX_Listing_Rota");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Enlem");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("Boylam");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IlAdi");

                    b.HasKey("ProvinceId")
                        .HasName("PK_Iller");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RolAdi")
                        .HasComment("Rolün adını belirtir");

                    b.HasKey("RoleId")
                        .HasName("PK_Roller");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Kargo_İlan.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.HasKey("UserId")
                        .HasName("PK_Kullanicilar");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kargo_İlan.Models.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypeId"));

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AracAdi")
                        .HasComment("Araç tipinin adını belirtir");

                    b.HasKey("VehicleTypeId")
                        .HasName("PK_AracTipleri");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Listing", b =>
                {
                    b.HasOne("Kargo_İlan.Models.CargoType", "CargoType")
                        .WithMany("Listings")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_KargoTipi");

                    b.HasOne("Kargo_İlan.Models.CategoryType", "CategoryType")
                        .WithMany("Listings")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_Kategori");

                    b.HasOne("Kargo_İlan.Models.User", "User")
                        .WithMany("Listings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_Kullanicilar");

                    b.HasOne("Kargo_İlan.Models.Province", "VarisIl")
                        .WithMany("VarisIl")
                        .HasForeignKey("VarisIlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_VarisIli");

                    b.HasOne("Kargo_İlan.Models.District", "VarisIlce")
                        .WithMany("VarisIlce")
                        .HasForeignKey("VarisIlceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_VarisIlcesi");

                    b.HasOne("Kargo_İlan.Models.Country", "VarisUlke")
                        .WithMany("VarisCountry")
                        .HasForeignKey("VarisUlkeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_VarisUlkesi");

                    b.HasOne("Kargo_İlan.Models.VehicleType", "VehicleType")
                        .WithMany("Listings")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_AracTipi");

                    b.HasOne("Kargo_İlan.Models.Province", "YuklemeIl")
                        .WithMany("YuklemeIl")
                        .HasForeignKey("YuklemeIlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_YuklemeIli");

                    b.HasOne("Kargo_İlan.Models.District", "YuklemeIlce")
                        .WithMany("YuklemeIlce")
                        .HasForeignKey("YuklemeIlceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_YuklemeIlcesi");

                    b.HasOne("Kargo_İlan.Models.Country", "YuklemeUlke")
                        .WithMany("YuklemeCountry")
                        .HasForeignKey("YuklemeUlkeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ilanlar_YuklemeUlkesi");

                    b.Navigation("CargoType");

                    b.Navigation("CategoryType");

                    b.Navigation("User");

                    b.Navigation("VarisIl");

                    b.Navigation("VarisIlce");

                    b.Navigation("VarisUlke");

                    b.Navigation("VehicleType");

                    b.Navigation("YuklemeIl");

                    b.Navigation("YuklemeIlce");

                    b.Navigation("YuklemeUlke");
                });

            modelBuilder.Entity("Kargo_İlan.Models.User", b =>
                {
                    b.HasOne("Kargo_İlan.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Kullanicilar_Roller");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Kargo_İlan.Models.CargoType", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.CategoryType", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Country", b =>
                {
                    b.Navigation("VarisCountry");

                    b.Navigation("YuklemeCountry");
                });

            modelBuilder.Entity("Kargo_İlan.Models.District", b =>
                {
                    b.Navigation("VarisIlce");

                    b.Navigation("YuklemeIlce");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Province", b =>
                {
                    b.Navigation("VarisIl");

                    b.Navigation("YuklemeIl");
                });

            modelBuilder.Entity("Kargo_İlan.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Kargo_İlan.Models.User", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("Kargo_İlan.Models.VehicleType", b =>
                {
                    b.Navigation("Listings");
                });
#pragma warning restore 612, 618
        }
    }
}
